Внесите 12 правок в свои комментарии, дополнительно указывая, по какому из вышеприведённых пунктов была сделана та или иная правка. 

1. resp_history = ApiHandler.get_metrics_history(obj_id, metrics, **history_params)
   if resp_history.status_code != 200:
      # TODO: add logging
      continue
// Пункт 6 "Комментарии TODO". Указываю на место, где необходимо добавить логирование в будущем

2. # Fit different models and choose the best
   for metric_name, df in data_history.items():
      pass
// Пункт 2 "Представление намерений". Указываю на то, что внутри цикла планирую построить несколько ML-моделей и затем выбрать среди них лучшую

3.  # You can face missing values for test servers (this is not in the REST API documentation)
    df["status"] = df["status"].fillna(df["updated"])
// Пункт 5. "Усиление". Здесь указываю на важность обработки пропущенных значений, т.к. есть проблема не описанная в документации к REST API

4. # Add 'EntityType' field (for links objects = 2)
   df["entityType"] = 2
// Пункт 1. "Информативные комментарии" (хотя в конкретном случае значение "2" можно было бы вынести как константу: LINKS_ENTITY_TYPE = 2, а переменную df переименовать в df_links)

5. if len(data_history) != 0:
      # TODO: add interpolation
      continue
// Пункт 6. "Комментарии TODO". Указываю на необходимость доработки функционала (добавление интерполяции данных)

6. def __init__(self, ClusteringObj=KMeansClustering):
      super().__init__()
      self.ClusteringObj = ClusteringObj # trained clustering object
// Пункт 3. "Прояснение". Даю информацию о том, что на вход ожидается уже обученная модель кластеризации

7. # Export data to test server if it's 'True'
   TEST_MODE = False
// Пункт 2 "Представление намерений". Указываю на то, что будет, если значение константы выставить на True

8. # This corridors approach give terrible results for seasonality time-series
   # if ADD_DYNAMIC_CORRIDORS:
   #    ...
// Пункт 4 "Предупреждение о последствиях". Сообщаю о том, что данный вариант построения корридоров неэффективен на данных с сезонностью

9. # There are same clients in different campaigns (need to avoid duplicated clients) 
   df_clients = df_clients.drop_duplicates(subset=[...])
// Пункт 5 "Усиление". Уведомляю о значимости удаления дубликатов ввиду некоторой особенности данных

10. # TODO: modify seasonality (automatic substitution of the upper threshold)
    seasonal_periods = trial.suggest_int('seasonal_periods', 3,  self.max_seasonal_periods) 
// Пункт 6. "Комментарии TODO". Указываю на необходимость добавить возможность гибкой настройки переменной 'max_seasonal_periods'

11. # Make K-Fold cross-validation with Optuna library
    ...
// Пункт 2 "Представление намерений". Сообщаю о планируемых дальнейших действиях по построению модели

12. 
        
