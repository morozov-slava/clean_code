Найдите 15 своих плохих комментариев, и напишите по каждому, что вы сделали для их улучшения с указанием соответствующего пункта из занятия. 

1. # drop not valid metrics
   for metric_name in not_valid_metrics:
       del data_history[metric_name]
// Пункт 4 "Шум". Данный комментарий можно просто убрать, т.к. код является достаточно читаемым и понятным (что не отменяет необходимость его рефакторинга в целом)

2. # ForecastCorridor = cr.IqrCorridors()
   # lower_bound, upper_bound = ForecastCorridor.make_corridors(y_full, WINDOW_SIZE, DEVIATION_FACTOR)
   # lower_bound, upper_bound = lower_bound[-len(y_pred):], upper_bound[-len(y_pred):]
// Пункт 11 "Закомментированный код". Оставил закомментированным код старой модели, которая использовалась в предыдущей версии. Код необходимо просто убрать

3. # Add to result
   results_modeling[f"{obj_id}=={metric_name}"] = {
      "best_model_name": best_model_name,
      "timestamps": fc_timestamps,
      "forecast": y_pred,
      "lower_bound": lower_bound,
      "upper_bound": upper_bound
   }
// Пункт 4 "Шум". Данный комментарий не даёт никакой информации. Его можно просто убрать.

4. ...
//

5. ###############
   ### Logging ###
   ###############
   logger_file = lb.create_file_logger()
   if STREAM_LOGGING:
       logger_stream = lb.create_stream_logger()
// Пункт 5. "Позиционные маркеры". Выделяют блок кода, где мы определяем логгер. Этот комментарий только загромождает код, поэтому его следует убрать.

6. # Keep only key fields
   key_fields = ["id", "source", "target", "name", "state_id", "last_state_update", "entityType"]
   df = df[key_fields]
// Пункт 4 "Шум". Данный комментарий не даёт никакой информации. Его можно просто убрать.

7.  # Back to default format
    data_cleaned = Scaler.inverse_transform(data_cleaned)
    data_cleaned = data_cleaned[:, 1]
// Пункт 9 "Неочевидный комментарий". Из комментария неясно, что возвращается в формат "по умолчанию".
// Решение: Вынести процесс стандартизации в отдельный класс DataScaler с соответсвующими методами

8. # Schema for objects tree request
   schema_tree = {
      "name": pl.String,
      "child_ids": pl.List(pl.String),
      "state_id": pl.Int64,
      "class_id": pl.String,
      "id": pl.String,
      "discovery_id": pl.String,
      "parent_id": pl.List(pl.String)
  }
// Пункт 2 "Бормотание". Невнятный комментарий, который не даёт какой-то точной информации. 
// Решение: изменить имя переменной на "objects_tree_schema", а комментарий убрать

9. # Make scaler
   Scaler = StandardScaler()
   data_preprocessed = Scaler.fit_transform(data)
// Пункт 4 "Шум". Данный комментарий не даёт никакой информации. Его можно просто убрать.

10. 
