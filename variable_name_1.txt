6.1. Разберите свой код, и сделайте пять примеров, где можно более наглядно учесть в именах переменных уровни абстракции.
1) n_rows -> n_active_clients
// кол-во строк в таблице с активными клиентами
2) df_initial_clients_data -> df_raw
// исходные данные на этапе предобработки (preprocessing)
3) y_pred -> predicted_price 
// цена, спрогнозированная моделью
4) response_result -> df_objs_structure
// результат 'GET' запроса, возвращающий датафрейм с описанием структуры объектов
5) log_report -> program_run_report
// отчёт о работе программы (на базе логов)

6.2. Приведите четыре примера, где вы в качестве имён переменных использовали или могли бы использовать технические термины из информатики.
1) Rnn 
// экземпляр класса Reccurent Neural Network 
2) wd или working_directory
// переменная, указывающая рабочей директории
3) regex_pattern 
// переменная-шаблон для регулярного выражения
4) db_handler 
// переменная-обработчик для работы с базой данных
5) credentials
// переменная, хранящая учётные или другие "чувствительные" данные 

6.3. Придумайте или найдите в своём коде три примера, когда имена переменных даны с учётом контекста (функции, метода, класса).
1) x_train 
// тренировочная выборка (используется в связке с функцией sklearn.model_selection.train_test_split для разбиения датасета на тренировочную и тестовую выборки)
2) all_edges
// список всех рёбер (переменная метода из класса Graph) 
3) response
// переменная с результатом запроса в функции обращения к сервису по API

6.4. Найдите пять имён переменных в своём коде, длины которых не укладываются в 8-20 символов, и исправьте, чтобы они укладывались в данный диапазон. 
1) df_all_marketing_campaigns -> df_marketing_camps 
// датафрейм с данными по всем маркетинговым кампаниям 
2) holt_winters_model_best_params -> best_holt_params
// перечень лучших гиперпараметров для модели Хольта-Уинтерса
3) features_scaling_method -> scaling_method
// метод масштабирования признаков для модели машинного обучения
4) avg_revenue_without_fee -> avg_revenue_no_fee
// средняя выручка без учёта абонентской платы
5) number_of_max_retries_before_break -> n_retries_till_break
// количество повторных попыток обращения перед прерыванием цикла
